spring.application.name=snslogin

server.port = 8099

# Google Login KEY
spring.OAuth2.GOOGLE.url=https://accounts.google.com/o/oauth2/v2/auth
spring.OAuth2.GOOGLE.client-id=
spring.OAuth2.GOOGLE.client-secret=
spring.OAuth2.GOOGLE.callback-url=http://localhost:8099/app/accounts/auth/google/callback
spring.OAuth2.GOOGLE.scope=email profile

spring.OAuth2.GOOGLE.Authorization-url=https://oauth2.googleapis.com/token 
spring.OAuth2.GOOGLE.resource-url=https://www.googleapis.com/userinfo/v2/me

# Naver Login KEY
spring.OAuth2.NAVER.url=https://nid.naver.com/oauth2.0/authorize
spring.OAuth2.NAVER.client-id=
spring.OAuth2.NAVER.client-secret=
spring.OAuth2.NAVER.callback-url=http://localhost:8099/app/accounts/auth/naver/callback
spring.OAuth2.NAVER.state=state

spring.OAuth2.NAVER.Authorization-url=https://nid.naver.com/oauth2.0/token
spring.OAuth2.NAVER.resource-url=https://openapi.naver.com/v1/nid/me

# Kakao Login KEY
spring.OAuth2.KAKAO.url=https://kauth.kakao.com/oauth/authorize
spring.OAuth2.KAKAO.client-id=
spring.OAuth2.KAKAO.client-secret=
spring.OAuth2.KAKAO.scope=account_email profile_nickname profile_image
spring.OAuth2.KAKAO.callback-url=http://localhost:8099/app/accounts/auth/kakao/callback

spring.OAuth2.KAKAO.Authorization-url=https://kauth.kakao.com/oauth/token
spring.OAuth2.KAKAO.resource-url=https://kapi.kakao.com/v2/user/me


# 정적 리소스에 변화가 있을 때 바로 반영한다.
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true
spring.devtools.thymeleaf.cache=false

spring.freemarker.cache=false

# thymeleaf 참조 경로
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.enabled=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8

# thymeleaf에 대한 캐시를 남기지 않는다. cache=false 설정(운영시는 true)
spring.thymeleaf.cache=false

# templates 디렉토리에 파일이 있는지 없는지 체크, 없으면 에러를 발생시킨다.
spring.thymeleaf.check-template-location=true